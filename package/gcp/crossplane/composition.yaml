apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: projectx-gcp-crossplane
  labels:
    crossplane.io/xrd: xcrossplane.gcp.projectx.mavenwave.dev
spec:
  compositeTypeRef:
    apiVersion: gcp.projectx.mavenwave.dev/v1alpha1
    kind: XCrossplane
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
  - name: common
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.labels
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: metadata.labels[ref.projectx.mavenwave.dev/tenant]
  - name: configRef
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigRef.name
      toFieldPath: spec.providerConfigRef.name
  resources:
  # Crossplane GCP Service Account
  - name: crossplane-gcp-sa
    base:
      apiVersion: iam.gcp.crossplane.io/v1alpha1
      kind: ServiceAccount
      metadata:
        annotations: 
          crossplane.io/external-name: workload-crossplane
      spec:
        forProvider:
          description: Workload identity for Crossplane
          displayName: Crossplane Workload
    patches:
    - type: PatchSet
      patchSetName: common
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-workload-crossplane"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.serviceAccounts.crossplane.email
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.name
      toFieldPath: status.serviceAccounts.crossplane.name
# Crossplane GCP Provider Kubernetes Service Account Policy
  - name: crossplane-gcp-ksa-policy
    base:
      apiVersion: iam.gcp.crossplane.io/v1alpha1
      kind: ServiceAccountPolicy
      metadata:
        annotations: 
          crossplane.io/external-name: workload-crossplane-policy
      spec:
        forProvider:
          serviceAccountSelector:
            matchControllerRef: true
          policy:
            bindings:
            - role: roles/iam.workloadIdentityUser
    patches:
    - type: PatchSet
      patchSetName: common
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-workload-crossplane"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.projectId
      toFieldPath: spec.forProvider.policy.bindings[0].members[0]
      transforms:
      - type: string
        string:
          fmt: "serviceAccount:%s.svc.id.goog[crossplane-system/gcp-provider]"
# Crossplane GCP Provider Kubernetes Service Account
  - name: crossplane-gcp-provider-ksa
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: gcp-provider
              namespace: crossplane-system
    patches:
    - type: PatchSet
      patchSetName: common
    - type: PatchSet
      patchSetName: configRef
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-gcp-provider-sa"
    - type: FromCompositeFieldPath
      fromFieldPath: status.serviceAccounts.crossplane.email
      toFieldPath: spec.forProvider.manifest.metadata.annotations[iam.gke.io/gcp-service-account]
# Crossplane Kubernetes Role Binding
  - name: crossplane-provider-rb
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: crossplane-provider-rb
            subjects:
            - kind: ServiceAccount
              name: gcp-provider
              namespace: crossplane-system
            roleRef:
              kind: ClusterRole
              name: cluster-admin
              apiGroup: rbac.authorization.k8s.io
    patches:
    - type: PatchSet
      patchSetName: common
    - type: PatchSet
      patchSetName: configRef
    - type:  FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-provider-rb"
# Crossplane GCP Controller Config
  - name: gcp-crossplane-provider-config
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: pkg.crossplane.io/v1alpha1
            kind: ControllerConfig
            metadata:
              name: gcp-provider
            spec:
              serviceAccountName: gcp-provider
    patches:
    - type: PatchSet
      patchSetName: common
    - type: PatchSet
      patchSetName: configRef
    - type:  FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-gcp-crossplane-provider-config"
# Crossplane GCP Provider
  - name: gcp-crossplane-provider
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: pkg.crossplane.io/v1
            kind: Provider
            metadata:
              name: gcp-provider
            spec:
              package: crossplane/provider-gcp:v0.20.0
              controllerConfigRef:
                name: gcp-provider
    patches:
    - type: PatchSet
      patchSetName: common
    - type: PatchSet
      patchSetName: configRef
    - type:  FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-gcp-crossplane-provider"
# # Crossplane Helm Provider
#   - name: helm-crossplane-provider
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1
#             kind: Provider
#             metadata:
#               name: helm-provider
#             spec:
#               package: crossplane/provider-helm:v0.10.0
#               controllerConfigRef:
#                 name: gcp-provider
#     patches:
#     - type: PatchSet
#       patchSetName: common
#     - type: PatchSet
#       patchSetName: configRef
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-helm-crossplane-provider"
# Crossplane Kubernetes Provider
  - name: kubernetes-crossplane-provider
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: pkg.crossplane.io/v1
            kind: Provider
            metadata:
              name: kubernetes-provider
            spec:
              package: crossplane/provider-kubernetes:v0.3.0
              controllerConfigRef:
                name: gcp-provider
    patches:
    - type: PatchSet
      patchSetName: common
    - type: PatchSet
      patchSetName: configRef
    - type:  FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-kubernetes-crossplane-provider"