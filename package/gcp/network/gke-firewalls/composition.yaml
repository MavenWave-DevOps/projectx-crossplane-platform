apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: projectx-gcp-gke-firewalls
  labels:
    crossplane.io/xrd:  xgkefirewalls.gcp.projectx.mavenwave.dev
spec:
  compositeTypeRef:
    apiVersion: gcp.projectx.mavenwave.dev/v1alpha1
    kind: XGkeFirewall
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
  - name: common
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.labels
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.id
      toFieldPath: metadata.labels[xnetworks.projectx.mavenwave.dev/firewall-id]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: metadata.labels[ref.projectx.mavenwave.dev/tenant]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigRef.name
      toFieldPath: spec.providerConfigRef.name
  resources:
  # Firewall rule for GKE node egress
  - name: inter-node-fwrule
    base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Firewall
      spec:
        forProvider:
          networkSelector:
            matchLabels: {}
          allowed:
          - IPProtocol: tcp
          - IPProtocol: udp
          - IPProtocol: icmp
          - IPProtocol: sctp
          - IPProtocol: esp
          - IPProtocol: ah
          direction: EGRESS
    patches:
    - type: PatchSet
      patchSetName: common
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.name
      transforms:
      - type: string
        string: 
          fmt: "%s-gke-intra-cluster-egress"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.network.id
      toFieldPath: spec.forProvider.networkSelector.matchLabels[xnetworks.projectx.mavenwave.dev/network-id]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.masterIpv4CidrBlock
      toFieldPath: spec.forProvider.destinationRanges[0]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.nodes.cidr
      toFieldPath: spec.forProvider.destinationRanges[1]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.pods.cidr
      toFieldPath: spec.forProvider.destinationRanges[2]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.nodes.tag
      toFieldPath: spec.forProvider.targetTags[0]
  # Firewall rule for GKE webhook ingress
  - name: webhooks-fwrule
    base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Firewall
      spec:
        forProvider:
          networkSelector:
            matchLabels: {}
          allowed:
          - IPProtocol: tcp
            ports:
            - "8443"
            - "9443"
            - "15017"
          direction: INGRESS
    patches:
    - type: PatchSet
      patchSetName: common
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.name
      transforms:
      - type: string
        string: 
          fmt: "%s-gke-webhooks"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.network.id
      toFieldPath: spec.forProvider.networkSelector.matchLabels[xnetworks.projectx.mavenwave.dev/network-id]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.masterIpv4CidrBlock
      toFieldPath: spec.forProvider.sourceRanges[0]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.nodes.tag
      toFieldPath: spec.forProvider.targetTags[0]