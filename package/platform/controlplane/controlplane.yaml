apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: controlplanes.platform.projectx.mavenwave.dev
spec:
  claimNames:
    kind: ControlPlaneClaim
    plural: controlplaneclaims
  connectionSecretKeys:
  - kubeconfig
  defaultCompositionRef:
    name: projectx-platform-controlplane-vcluster-gcp
  group: platform.projectx.mavenwave.dev
  names:
    kind: ControlPlane
    plural: controlplanes
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              parameters:
                properties:
                  google:
                    properties:
                      cluster:
                        properties:
                          authorizedNetworks:
                            description: The configuration options for master authorized
                              networks feature
                            properties:
                              cidrBlocks:
                                items:
                                  properties:
                                    cidrBlock:
                                      description: Must be specified in CIDR notation
                                      type: string
                                    displayName:
                                      description: An optional field for users to
                                        identify CIDR blocks
                                      type: string
                                  type: object
                                type: array
                              enabled:
                                default: false
                                description: Whether or not master authorized networks
                                  is enabled
                                type: boolean
                            type: object
                          diskSizeGb:
                            default: 50
                            description: Node disk size in GB
                            type: integer
                          identity:
                            properties:
                              secretRef:
                                properties:
                                  key:
                                    default: credentials
                                    type: string
                                  name:
                                    default: default
                                    type: string
                                required: []
                                type: object
                              source:
                                default: Secret
                                type: string
                            required:
                            - secretRef
                            type: object
                          machineType:
                            default: small
                            description: Node pool machine type
                            enum:
                            - small
                            - medium
                            type: string
                          masterIpv4CidrBlock:
                            default: 172.16.0.0/28
                            description: The IP range in CIDR notation to use for
                              the hosted master network
                            type: string
                          max:
                            default: 10
                            description: Maximum number of cluster nodes
                            type: integer
                          min:
                            default: 1
                            description: Minimum number of cluster nodes
                            type: integer
                        required:
                        - authorizedNetworks
                        - identity
                        type: object
                      network:
                        properties:
                          nodes:
                            properties:
                              cidr:
                                description: Nodes subnet CIDR
                                type: string
                            required:
                            - cidr
                            type: object
                          pods:
                            properties:
                              cidr:
                                description: Pods subnet CIDR
                                type: string
                            required:
                            - cidr
                            type: object
                          services:
                            properties:
                              cidr:
                                description: Services subnet CIDR
                                type: string
                            required:
                            - cidr
                            type: object
                        required:
                        - nodes
                        - pods
                        - services
                        type: object
                      project:
                        properties:
                          id:
                            type: string
                          number:
                            type: string
                        required:
                        - number
                        - id
                        type: object
                      region:
                        default: regional-us-central
                        description: Resources region
                        enum:
                        - regional-us-central
                        - us-central
                        - us-east
                        - us-west
                        type: string
                    required:
                    - project
                    - network
                    type: object
                  platform:
                    properties:
                      version:
                        default: main
                        type: string
                    type: object
                  vcluster:
                    properties:
                      domain:
                        type: string
                      port:
                        default: 443
                        type: integer
                    required:
                    - domain
                    type: object
                required: []
                type: object
            required:
            - parameters
            type: object
          status:
            properties:
              crossplane:
                properties:
                  conditions:
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
              google:
                properties:
                  cluster:
                    properties:
                      conditions:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      endpoint:
                        type: string
                      location:
                        type: string
                      pods:
                        properties:
                          cidr:
                            type: string
                        type: object
                      selfLink:
                        type: string
                      services:
                        properties:
                          cidr:
                            type: string
                        type: object
                    type: object
                  kms:
                    properties:
                      cryptoKey:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          name:
                            type: string
                        type: object
                      cryptoKeyPolicy:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                      keyRing:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          name:
                            type: string
                        type: object
                    type: object
                  network:
                    properties:
                      clusterEgressFw:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                      router:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                      vpc:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          id:
                            type: string
                          selfLink:
                            type: string
                        type: object
                      webhooksFw:
                        properties:
                          conditions:
                            items:
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                        type: object
                    type: object
                  nodePool:
                    properties:
                      conditions:
                        items:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        type: array
                      selfLink:
                        type: string
                    type: object
                type: object
            type: object
        type: object
    served: true
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    crossplane.io/xrd: controlplanes.platform.projectx.mavenwave.dev
    provider: gcp
  name: projectx-platform-controlplane-gcp
spec:
  compositeTypeRef:
    apiVersion: platform.projectx.mavenwave.dev/v1alpha1
    kind: ControlPlane
  patchSets:
  - name: name
    patches:
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-controlplane'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - string:
          fmt: '%s-controlplane'
        type: string
      type: FromCompositeFieldPath
  - name: providerConfig
    patches:
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
  - name: metadata
    patches:
    - fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.labels[platform.projectx.mavenwave.dev/controlplane]
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Network
      spec:
        forProvider:
          autoCreateSubnetworks: false
          routingConfig:
            routingMode: GLOBAL
    name: network
    patches:
    - patchSetName: metadata
      type: PatchSet
    - patchSetName: name
      type: PatchSet
    - patchSetName: providerConfig
      type: PatchSet
    - fromFieldPath: status.atProvider.id
      toFieldPath: status.google.network.vpc.id
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.selfLink
      toFieldPath: status.google.network.vpc.selfLink
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      toFieldPath: status.google.network.vpc.conditions
      type: ToCompositeFieldPath
  - base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Firewall
      spec:
        forProvider:
          allowed:
          - IPProtocol: tcp
          - IPProtocol: udp
          - IPProtocol: icmp
          - IPProtocol: sctp
          - IPProtocol: esp
          - IPProtocol: ah
          direction: EGRESS
          networkSelector:
            matchControllerRef: true
    name: inter-node-fwrule
    patches:
    - patchSetName: metadata
      type: PatchSet
    - patchSetName: providerConfig
      type: PatchSet
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-controlplane-intra-cluster-egress'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - string:
          fmt: '%s-cp-intra-cluster-egress'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.google.cluster.masterIpv4CidrBlock
      toFieldPath: spec.forProvider.destinationRanges[0]
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.google.network.nodes.cidr
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.destinationRanges[1]
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.google.network.pods.cidr
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.destinationRanges[2]
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.targetTags[0]
      transforms:
      - string:
          fmt: '%s-controlplane-default-pool'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: status.conditions
      toFieldPath: status.google.network.clusterEgressFw.conditions
      type: ToCompositeFieldPath
  - base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Firewall
      spec:
        forProvider:
          allowed:
          - IPProtocol: tcp
            ports:
            - "8443"
            - "9443"
            - "15017"
          direction: INGRESS
          networkSelector:
            matchControllerRef: true
    name: webhooks-fwrule
    patches:
    - patchSetName: metadata
      type: PatchSet
    - patchSetName: providerConfig
      type: PatchSet
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-controlplane-webhooks'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - string:
          fmt: '%s-cp-webhooks'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: spec.parameters.google.cluster.masterIpv4CidrBlock
      policy:
        fromFieldPath: Required
      toFieldPath: spec.forProvider.sourceRanges[0]
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.targetTags[0]
      transforms:
      - string:
          fmt: '%s-controlplane-default-pool'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: status.conditions
      toFieldPath: status.google.network.webhooksFw.conditions
      type: ToCompositeFieldPath
  - base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Router
      spec:
        forProvider:
          nats:
          - natIpAllocateOption: AUTO_ONLY
            sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
          networkSelector:
            matchControllerRef: true
    name: router
    patches:
    - patchSetName: metadata
      type: PatchSet
    - patchSetName: name
      type: PatchSet
    - patchSetName: providerConfig
      type: PatchSet
    - fromFieldPath: spec.parameters.google.region
      toFieldPath: spec.forProvider.region
      transforms:
      - map:
          regional-us-central: us-central1
          us-central: us-central1
          us-east: us-east1
          us-west: us-west1
        type: map
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.nats[0].name
      transforms:
      - string:
          fmt: '%s-controlplane'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: status.conditions
      toFieldPath: status.google.network.router.conditions
      type: ToCompositeFieldPath
  writeConnectionSecretsToNamespace: crossplane-system
