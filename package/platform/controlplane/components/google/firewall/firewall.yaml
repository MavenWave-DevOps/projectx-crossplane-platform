- op: add
  path: /spec/resources/-1
  value:
    name: inter-node-fwrule
    base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Firewall
      spec:
        forProvider:
          networkSelector:
            matchControllerRef: true
          allowed:
          - IPProtocol: tcp
          - IPProtocol: udp
          - IPProtocol: icmp
          - IPProtocol: sctp
          - IPProtocol: esp
          - IPProtocol: ah
          direction: EGRESS
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: providerConfig
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.namespace
        - fromFieldPath: spec.claimRef.name
        strategy: string
        string:
          fmt: "%s-%s-intra-cluster-egress"
      toFieldPath: metadata.name
    # - type: FromCompositeFieldPath
    #   fromFieldPath: metadata.name
    #   toFieldPath: metadata.annotations[crossplane.io/external-name]
    #   transforms:
    #   - type: string
    #     string:
    #       fmt: "%s-cp-intra-cluster-egress"
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.namespace
        - fromFieldPath: spec.claimRef.name
        strategy: string
        string:
          fmt: "Intra cluster egress for %s-%s cluster"
      toFieldPath: spec.forProvider.description
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.cluster.masterIpv4CidrBlock
      toFieldPath: spec.forProvider.destinationRanges[0]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.network.nodes.cidr
      toFieldPath: spec.forProvider.destinationRanges[1]
      policy:
        fromFieldPath: Required
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.network.pods.cidr
      toFieldPath: spec.forProvider.destinationRanges[2]
      policy:
        fromFieldPath: Required
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.namespace
        - fromFieldPath: spec.claimRef.name
        strategy: string
        string:
          fmt: "%s-%s-controlplane-default-pool"
      toFieldPath: spec.forProvider.targetTags[0]
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions
      toFieldPath: status.google.network.clusterEgressFw.conditions
      
- op: add
  path: /spec/resources/-1
  value:
    name: webhooks-fwrule
    base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Firewall
      spec:
        forProvider:
          networkSelector:
            matchControllerRef: true
          allowed:
          - IPProtocol: tcp
            ports:
            - "8443"
            - "9443"
            - "15017"
          direction: INGRESS
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: providerConfig
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.namespace
        - fromFieldPath: spec.claimRef.name
        strategy: string
        string:
          fmt: "%s-%s-webhooks"
      toFieldPath: metadata.name
    # - type: FromCompositeFieldPath
    #   fromFieldPath: metadata.name
    #   toFieldPath: metadata.annotations[crossplane.io/external-name]
    #   transforms:
    #   - type: string
    #     string:
    #       fmt: "%s-cp-webhooks"
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.namespace
        - fromFieldPath: spec.claimRef.name
        strategy: string
        string:
          fmt: "Allow webhooks for %s-%s cluster"
      toFieldPath: spec.forProvider.description
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.cluster.masterIpv4CidrBlock
      toFieldPath: spec.forProvider.sourceRanges[0]
      policy:
        fromFieldPath: Required
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.namespace
        - fromFieldPath: spec.claimRef.name
        strategy: string
        string:
          fmt: "%s-%s-controlplane-default-pool"
      toFieldPath: spec.forProvider.targetTags[0]
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions
      toFieldPath: status.google.network.webhooksFw.conditions