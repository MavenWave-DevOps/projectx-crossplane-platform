apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    crossplane.io/xrd: controlplanes.platform.projectx.mavenwave.dev
    provider: gcp
  name: projectx-platform-controlplane-gcp
spec:
  compositeTypeRef:
    apiVersion: platform.projectx.mavenwave.dev/v1alpha1
    kind: ControlPlane
  patchSets:
  - name: name
    patches:
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - string:
          fmt: '%s-controlplane'
        type: string
      type: FromCompositeFieldPath
    - fromFieldPath: metadata.name
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - string:
          fmt: '%s-controlplane'
        type: string
      type: FromCompositeFieldPath
  - name: providerConfig
    patches:
    - fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
      type: FromCompositeFieldPath
  - name: metadata
    patches:
    - fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.labels[platform.projectx.mavenwave.dev/controlplane]
      type: FromCompositeFieldPath
  resources:
  - base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Network
      spec:
        forProvider:
          autoCreateSubnetworks: false
          routingConfig:
            routingMode: GLOBAL
    name: network
    patches:
    - patchSetName: metadata
      type: PatchSet
    - patchSetName: name
      type: PatchSet
    - patchSetName: providerConfig
      type: PatchSet
    - fromFieldPath: status.atProvider.id
      toFieldPath: status.google.network.vpc.id
      type: ToCompositeFieldPath
    - fromFieldPath: status.atProvider.selfLink
      toFieldPath: status.google.network.vpc.selfLink
      type: ToCompositeFieldPath
    - fromFieldPath: status.conditions
      toFieldPath: status.google.network.vpc.conditions
      type: ToCompositeFieldPath
  writeConnectionSecretsToNamespace: crossplane-system
