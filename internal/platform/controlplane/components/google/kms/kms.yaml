- op: add
  path: /spec/resources/-1
  value:
    name: kms-keyring
    base:
      apiVersion: kms.gcp.crossplane.io/v1alpha1
      kind: KeyRing
      spec:
        forProvider:
          location: 
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: providerConfig
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-controlplane"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - type: string
        string:
          fmt: "%s-controlplane"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.region
      toFieldPath: spec.forProvider.location
      transforms:
      - type: map
        map:
          regional-us-central: us-central1
          us-central: us-central1
          us-east: us-east1
          us-west: us-west1
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.name
      toFieldPath: status.google.kms.keyRing.name
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions
      toFieldPath: status.google.kms.keyRing.conditions
- op: add
  path: /spec/resources/-1
  value:
    name: kms-crypto-key
    base:
      apiVersion: kms.gcp.crossplane.io/v1alpha1
      kind: CryptoKey
      spec:
        forProvider:
          purpose: ENCRYPT_DECRYPT
          keyRingSelector:
            matchControllerRef: true
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: providerConfig
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-controlplane"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.name
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - type: string
        string:
          fmt: "%s-controlplane"
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.name
      toFieldPath: status.google.kms.cryptoKey.name
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions
      toFieldPath: status.google.kms.cryptoKey.conditions
- op: add
  path: /spec/resources/-1
  value:
    name: kms-key-policy
    base:
      apiVersion: kms.gcp.crossplane.io/v1alpha1
      kind: CryptoKeyPolicy
      spec:
        forProvider:
          cryptoKeySelector:
            matchControllerRef: true
          policy:
            bindings:
            - role: roles/cloudkms.cryptoKeyDecrypter
            - role: roles/cloudkms.cryptoKeyEncrypter
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: PatchSet
      patchSetName: providerConfig
    - type: PatchSet
      patchSetName: name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.project.number
      toFieldPath: spec.forProvider.policy.bindings[0].members[0]
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: "serviceAccount:service-%s@container-engine-robot.iam.gserviceaccount.com"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.project.number
      toFieldPath: spec.forProvider.policy.bindings[1].members[0]
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: "serviceAccount:service-%s@container-engine-robot.iam.gserviceaccount.com"
    - type: ToCompositeFieldPath
      fromFieldPath: status.conditions
      toFieldPath: status.google.kms.cryptoKeyPolicy.conditions