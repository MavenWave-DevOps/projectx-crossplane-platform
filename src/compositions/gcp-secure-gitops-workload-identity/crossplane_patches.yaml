- op: add
  path: /spec/resources/-1
  value:
    name: kubeconfig-job
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      metadata:
      spec:
        providerConfigRef:
          name: in-cluster
        forProvider:
          manifest:
            apiVersion: batch/v1
            kind: Job
            metadata:
              name: kubeconfig-job
              namespace: crossplane-system
            spec:
              backoffLimit: 30
              template:
                spec:
                  serviceAccountName: kubernetes-provider
                  restartPolicy: Never
                  containers:
                  - image: google/cloud-sdk
                    name: create-secret
                    env:
                    - name: NAME
                      value:
                    - name: REGION
                      value: 
                    - name: PROJECTID
                      value: 
                    - name: SECRETNAME
                      value: 
                    imagePullPolicy: IfNotPresent
                    command:
                    - /bin/bash
                    - -ce
                    - |-
                      KUBECONFIG=/kubeconfig; gcloud container clusters get-credentials $NAME --region $REGION --project $PROJECTID
                      kubectl create secret generic $SECRETNAME \
                        --dry-run=client \
                        --from-file=kubeconfig=/kubeconfig \
                        -o yaml | kubectl apply -f -        
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-kubeconfig-job"
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[0].value
    - type: FromCompositeFieldPath
      fromFieldPath: status.cluster.location
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[1].value
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.projectId
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[2].value
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[3].value
      transforms:
      - type: string
        string:
          fmt: "%s-gke-kubeconfig"

- op: add
  path: /spec/resources/-1
  value:
    name: kubeconfig-cronjobjob
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      metadata:
      spec:
        providerConfigRef:
          name: in-cluster
        forProvider:
          manifest:
            apiVersion: batch/v1
            kind: CronJob
            metadata:
              name: kubeconfig-job
              namespace: crossplane-system
            spec:
              suspend: false
              schedule: "*/45 * * * *"
              failedJobsHistoryLimit: 1
              successfulJobsHistoryLimit: 1
              jobTemplate:
                spec:
                  template:
                    spec:
                      serviceAccountName: kubernetes-provider
                      restartPolicy: Never
                      containers:
                      - image: google/cloud-sdk
                        name: create-secret
                        env:
                        - name: NAME
                          value:
                        - name: REGION
                          value: 
                        - name: PROJECTID
                          value: 
                        - name: SECRETNAME
                          value: 
                        imagePullPolicy: IfNotPresent
                        command:
                        - /bin/bash
                        - -ce
                        - |-
                          KUBECONFIG=/kubeconfig; gcloud container clusters get-credentials $NAME --region $REGION --project $PROJECTID
                          kubectl create secret generic $SECRETNAME \
                            --dry-run=client \
                            --from-file=kubeconfig=/kubeconfig \
                            -o yaml | kubectl apply -f -        
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-kubeconfig-cronjob"
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.manifest.spec.jobTemplate.spec.template.spec.containers[0].env[0].value
    - type: FromCompositeFieldPath
      fromFieldPath: status.cluster.location
      toFieldPath: spec.forProvider.manifest.spec.jobTemplate.spec.template.spec.containers[0].env[1].value
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.projectId
      toFieldPath: spec.forProvider.manifest.spec.jobTemplate.spec.template.spec.containers[0].env[2].value
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.manifest.spec.jobTemplate.spec.template.spec.containers[0].env[3].value
      transforms:
      - type: string
        string:
          fmt: "%s-gke-kubeconfig"