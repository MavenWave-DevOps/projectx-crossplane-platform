# Crossplane GCP Service Account
- op: add
  path: /spec/resources/-1
  value:
    name: crossplane-gcp-sa
    base:
      apiVersion: iam.gcp.crossplane.io/v1alpha1
      kind: ServiceAccount
      metadata:
        annotations: 
          crossplane.io/external-name: workload-crossplane
      spec:
        forProvider:
          description: Workload identity for Crossplane
          displayName: Crossplane Workload
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigRef.name
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-gcp"
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.email
      toFieldPath: status.serviceAccounts.crossplane.email
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.name
      toFieldPath: status.serviceAccounts.crossplane.name
# Crossplane GCP Provider Kubernetes Service Account Policy
- op: add
  path: /spec/resources/-1
  value:
    name: crossplane-gcp-ksa-policy
    base:
      apiVersion: iam.gcp.crossplane.io/v1alpha1
      kind: ServiceAccountPolicy
      metadata:
        annotations: 
          crossplane.io/external-name: workload-crossplane-policy
      spec:
        forProvider:
          policy:
            bindings:
            - role: roles/iam.workloadIdentityUser
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigRef.name
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-workload-crossplane"
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.serviceAccountRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-gcp"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.google.projectId
      toFieldPath: spec.forProvider.policy.bindings[0].members[0]
      transforms:
      - type: string
        string:
          fmt: "serviceAccount:%s.svc.id.goog[crossplane-system/gcp-provider]"
      policy:
        fromFieldPath: Required
# Crossplane GCP Provider Kubernetes Service Account
- op: add
  path: /spec/resources/-1
  value:
    name: crossplane-gcp-provider-ksa
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: gcp-provider
              namespace: crossplane-system
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-gke"
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-gcp-provider"
# # Crossplane GCP Controller Config
# - op: add
#   path: /spec/resources/-1
#   value:
#     name: gcp-crossplane-provider-config
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1alpha1
#             kind: ControllerConfig
#             metadata:
#               name: gcp-provider
#             spec:
#               serviceAccountName: gcp-provider
#     patches:
#     - type: PatchSet
#       patchSetName: metadata
#     - type: FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: spec.providerConfigRef.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gke"
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gcp-crossplane-provider-config"
# # Crossplane GCP Provider
# - op: add
#   path: /spec/resources/-1
#   value:
#     name: gcp-crossplane-provider
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1
#             kind: Provider
#             metadata:
#               name: gcp-provider
#             spec:
#               package: crossplane/provider-gcp:v0.20.0
#               controllerConfigRef:
#                 name: gcp-provider
#     patches:
#     - type: PatchSet
#       patchSetName: metadata
#     - type: FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: spec.providerConfigRef.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gke"
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gcp-crossplane-provider"
#############################################
# This overloads the GKE control-plane
# # Crossplane GCP Terrajet Provider
# - op: add
#   path: /spec/resources/-1
#   value:
#     name: gcp-terrajet-crossplane-provider
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1
#             kind: Provider
#             metadata:
#               name: gcp-terrajet-provider
#             spec:
#               package: crossplane/provider-jet-gcp:v0.2.0-preview
#               controllerConfigRef:
#                 name: gcp-provider
#     patches:
#     - type: PatchSet
#       patchSetName: metadata
#     - type: FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: spec.providerConfigRef.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gke"
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gcp-terrajet-crossplane-provider"
#########################################################
# Crossplane Kubernetes Service Account
- op: add
  path: /spec/resources/-1
  value:
    name: crossplane-kubernetes-provider
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: ServiceAccount
            metadata:
              name: kubernetes-provider
              namespace: crossplane-system
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.providerConfigRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-gke"
    - type:  FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-kubernetes-provider"
# Crossplane Kubernetes Role Binding
- op: add
  path: /spec/resources/-1
  value:
    name: crossplane-provider-rb
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: rbac.authorization.k8s.io/v1
            kind: ClusterRoleBinding
            metadata:
              name: crossplane-provider-rb
            subjects:
            - kind: ServiceAccount
              name: gcp-provider
              namespace: crossplane-system
            - kind: ServiceAccount
              name: kubernetes-provider
              namespace: crossplane-system
            roleRef:
              kind: ClusterRole
              name: cluster-admin
              apiGroup: rbac.authorization.k8s.io
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.providerConfigRef.name
      transforms:
      - type: string
        string:
          fmt: "%s-gke"
    - type:  FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-crossplane-provider-rb"
# # Crossplane Kubernetes Controller Config
# - op: add
#   path: /spec/resources/-1
#   value:
#     name: kubernetes-crossplane-provider-config
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1alpha1
#             kind: ControllerConfig
#             metadata:
#               name: kubernetes-provider
#             spec:
#               serviceAccountName: kubernetes-provider
#     patches:
#     - type: PatchSet
#       patchSetName: metadata
#     - type: FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: spec.providerConfigRef.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gke"
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-kubernetes-crossplane-provider-config"
# # Crossplane Kubernetes Provider
# - op: add
#   path: /spec/resources/-1
#   value:
#     name: kubernetes-crossplane-provider
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1
#             kind: Provider
#             metadata:
#               name: kubernetes-provider
#             spec:
#               package: crossplane/provider-kubernetes:v0.3.0
#               controllerConfigRef:
#                 name: kubernetes-provider
#     patches:
#     - type: PatchSet
#       patchSetName: metadata
#     - type: FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: spec.providerConfigRef.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gke"
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-kubernetes-crossplane-provider"
# # Crossplane Helm Provider
# - op: add
#   path: /spec/resources/-1
#   value:
#     name: helm-crossplane-provider
#     base:
#       apiVersion: kubernetes.crossplane.io/v1alpha1
#       kind: Object
#       spec:
#         forProvider:
#           manifest:
#             apiVersion: pkg.crossplane.io/v1
#             kind: Provider
#             metadata:
#               name: helm-provider
#             spec:
#               package: crossplane/provider-helm:v0.10.0
#               controllerConfigRef:
#                 name: kubernetes-provider
#     patches:
#     - type: PatchSet
#       patchSetName: metadata
#     - type: FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: spec.providerConfigRef.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-gke"
#     - type:  FromCompositeFieldPath
#       fromFieldPath: metadata.name
#       toFieldPath: metadata.name
#       transforms:
#       - type: string
#         string:
#           fmt: "%s-helm-crossplane-provider"