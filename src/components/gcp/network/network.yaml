---
# Network
- op: add
  path: /spec/resources/-1
  value:
    name: network
    base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Network
      spec:
        forProvider:
          autoCreateSubnetworks: false
          routingConfig:
            routingMode: GLOBAL
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.description
      transforms:
      - type: string
        string:
          fmt: "%s cluster network"
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.network.id
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.selfLink
      toFieldPath: status.network.selfLink
# Subnetwork
- op: add
  path: /spec/resources/-1
  value:
    name: subnetwork
    base:
      apiVersion: compute.gcp.crossplane.io/v1beta1
      kind: Subnetwork
      spec:
        forProvider:
          networkSelector:
            matchControllerRef: true
          privateIPGoogleAccess: true
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      transforms:
      - type: string
        string:
          fmt: "%s-gke"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
      transforms:
      - type: map
        map:
          us-central: us-central1
          us-east: us-east1
          us-west: us-west1
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.subnetCidr
      toFieldPath: spec.forProvider.ipCidrRange
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.selfLink
      toFieldPath: status.subnetwork.selfLink
    - type: ToCompositeFieldPath
      fromFieldPath: spec.forProvider.ipCidrRange
      toFieldPath: status.subnetwork.cidr
# Router
- op: add
  path: /spec/resources/-1
  value:
    name: router
    base:
      apiVersion: compute.gcp.crossplane.io/v1alpha1
      kind: Router
      spec:
        forProvider:
          networkSelector:
            matchControllerRef: true
          nats:
          - sourceSubnetworkIpRangesToNat: ALL_SUBNETWORKS_ALL_IP_RANGES
            natIpAllocateOption: AUTO_ONLY
    patches:
    - type: PatchSet
      patchSetName: metadata
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.name
        - fromFieldPath: spec.parameters.region
        strategy: string
        string:
          fmt: "%s-%s"
      toFieldPath: metadata.annotations[crossplane.io/external-name]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
      transforms:
      - type: map
        map:
          us-central: us-central1
          us-east: us-east1
          us-west: us-west1
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.claimRef.name
        - fromFieldPath: spec.parameters.region
        strategy: string
        string:
          fmt: "%s-%s"
      toFieldPath: spec.forProvider.nats[0].name