---
apiVersion: gcp.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: default #use the same name as the namespace that you are using
  namespace: crossplane-system
spec:
  projectID: 
  credentials:
    source: Secret
    secretRef:
      key: token
      name: 
      namespace: 
---
# Make sure provider-helm has enough permissions to install your chart into cluster
#
# You can give admin permissions by running:
# SA=$(kubectl -n crossplane-system get sa -o name | grep provider-helm | sed -e 's|serviceaccount\/|crossplane-system:|g')
# kubectl create clusterrolebinding provider-helm-admin-binding --clusterrole cluster-admin --serviceaccount="${SA}"
apiVersion: helm.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: default #use the same name as the namespace that you are using
  namespace: crossplane-system
spec:
  credentials:
    source: InjectedIdentity
---
# Make sure provider-helm has enough permissions to install your chart into cluster
#
# You can give admin permissions by running:
# SA=$(kubectl -n crossplane-system get sa -o name | grep provider-kubernetes | sed -e 's|serviceaccount\/|crossplane-system:|g')
# kubectl create clusterrolebinding provider-kubernetes-admin-binding --clusterrole cluster-admin --serviceaccount="${SA}"
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  name: default #use the same name as the namespace that you are using
  namespace: crossplane-system
spec:
  credentials:
    source: InjectedIdentity